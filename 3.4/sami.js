
window.projectVersion = '3.4';

(function(root) {

    var bhIndex = null;
    var rootPath = '';
    var treeHtml = '        <ul>                <li data-name="namespace:" class="opened">                    <div style="padding-left:0px" class="hd">                        <span class="glyphicon glyphicon-play"></span>PHPUnit                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span>Framework                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span>MockObject                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:" >                    <div style="padding-left:54px" class="hd">                        <span class="glyphicon glyphicon-play"></span>Builder                    </div>                    <div class="bd">                                <ul>                <li data-name="class:PHPUnit_Framework_MockObject_Builder_Identity" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="PHPUnit_Framework_MockObject_Builder_Identity.html">Identity</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_MockObject_Builder_InvocationMocker" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="PHPUnit_Framework_MockObject_Builder_InvocationMocker.html">InvocationMocker</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_MockObject_Builder_Match" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="PHPUnit_Framework_MockObject_Builder_Match.html">Match</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_MockObject_Builder_MethodNameMatch" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="PHPUnit_Framework_MockObject_Builder_MethodNameMatch.html">MethodNameMatch</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_MockObject_Builder_Namespace" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="PHPUnit_Framework_MockObject_Builder_Namespace.html">Namespace</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_MockObject_Builder_ParametersMatch" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="PHPUnit_Framework_MockObject_Builder_ParametersMatch.html">ParametersMatch</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_MockObject_Builder_Stub" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="PHPUnit_Framework_MockObject_Builder_Stub.html">Stub</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:" >                    <div style="padding-left:54px" class="hd">                        <span class="glyphicon glyphicon-play"></span>Invocation                    </div>                    <div class="bd">                                <ul>                <li data-name="class:PHPUnit_Framework_MockObject_Invocation_Object" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="PHPUnit_Framework_MockObject_Invocation_Object.html">Object</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_MockObject_Invocation_Static" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="PHPUnit_Framework_MockObject_Invocation_Static.html">Static</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:" >                    <div style="padding-left:54px" class="hd">                        <span class="glyphicon glyphicon-play"></span>Matcher                    </div>                    <div class="bd">                                <ul>                <li data-name="class:PHPUnit_Framework_MockObject_Matcher_AnyInvokedCount" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="PHPUnit_Framework_MockObject_Matcher_AnyInvokedCount.html">AnyInvokedCount</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_MockObject_Matcher_AnyParameters" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="PHPUnit_Framework_MockObject_Matcher_AnyParameters.html">AnyParameters</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_MockObject_Matcher_ConsecutiveParameters" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="PHPUnit_Framework_MockObject_Matcher_ConsecutiveParameters.html">ConsecutiveParameters</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_MockObject_Matcher_Invocation" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="PHPUnit_Framework_MockObject_Matcher_Invocation.html">Invocation</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_MockObject_Matcher_InvokedAtIndex" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="PHPUnit_Framework_MockObject_Matcher_InvokedAtIndex.html">InvokedAtIndex</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastCount" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastCount.html">InvokedAtLeastCount</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastOnce" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastOnce.html">InvokedAtLeastOnce</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_MockObject_Matcher_InvokedAtMostCount" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="PHPUnit_Framework_MockObject_Matcher_InvokedAtMostCount.html">InvokedAtMostCount</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_MockObject_Matcher_InvokedCount" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="PHPUnit_Framework_MockObject_Matcher_InvokedCount.html">InvokedCount</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_MockObject_Matcher_InvokedRecorder" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="PHPUnit_Framework_MockObject_Matcher_InvokedRecorder.html">InvokedRecorder</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_MockObject_Matcher_MethodName" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="PHPUnit_Framework_MockObject_Matcher_MethodName.html">MethodName</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_MockObject_Matcher_Parameters" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="PHPUnit_Framework_MockObject_Matcher_Parameters.html">Parameters</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_MockObject_Matcher_StatelessInvocation" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="PHPUnit_Framework_MockObject_Matcher_StatelessInvocation.html">StatelessInvocation</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:" >                    <div style="padding-left:54px" class="hd">                        <span class="glyphicon glyphicon-play"></span>Stub                    </div>                    <div class="bd">                                <ul>                <li data-name="class:PHPUnit_Framework_MockObject_Stub_ConsecutiveCalls" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="PHPUnit_Framework_MockObject_Stub_ConsecutiveCalls.html">ConsecutiveCalls</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_MockObject_Stub_Exception" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="PHPUnit_Framework_MockObject_Stub_Exception.html">Exception</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_MockObject_Stub_MatcherCollection" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="PHPUnit_Framework_MockObject_Stub_MatcherCollection.html">MatcherCollection</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_MockObject_Stub_Return" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="PHPUnit_Framework_MockObject_Stub_Return.html">Return</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_MockObject_Stub_ReturnArgument" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="PHPUnit_Framework_MockObject_Stub_ReturnArgument.html">ReturnArgument</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_MockObject_Stub_ReturnCallback" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="PHPUnit_Framework_MockObject_Stub_ReturnCallback.html">ReturnCallback</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_MockObject_Stub_ReturnSelf" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="PHPUnit_Framework_MockObject_Stub_ReturnSelf.html">ReturnSelf</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_MockObject_Stub_ReturnValueMap" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="PHPUnit_Framework_MockObject_Stub_ReturnValueMap.html">ReturnValueMap</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:PHPUnit_Framework_MockObject_BadMethodCallException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_MockObject_BadMethodCallException.html">BadMethodCallException</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_MockObject_Exception" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_MockObject_Exception.html">Exception</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_MockObject_Generator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_MockObject_Generator.html">Generator</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_MockObject_Invocation" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_MockObject_Invocation.html">Invocation</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_MockObject_InvocationMocker" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_MockObject_InvocationMocker.html">InvocationMocker</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_MockObject_Invokable" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_MockObject_Invokable.html">Invokable</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_MockObject_Matcher" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_MockObject_Matcher.html">Matcher</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_MockObject_MockBuilder" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_MockObject_MockBuilder.html">MockBuilder</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_MockObject_MockObject" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_MockObject_MockObject.html">MockObject</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_MockObject_RuntimeException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_MockObject_RuntimeException.html">RuntimeException</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_MockObject_Stub" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_MockObject_Stub.html">Stub</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_MockObject_Verifiable" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_MockObject_Verifiable.html">Verifiable</a>                    </div>                </li>                </ul></div>                </li>                </ul></div>                </li>                </ul></div>                </li>                </ul>';

    var searchTypeClasses = {
        'Namespace': 'label-default',
        'Class': 'label-info',
        'Interface': 'label-primary',
        'Trait': 'label-success',
        'Method': 'label-danger',
        '_': 'label-warning'
    };

    var searchIndex = [
                    
            {"type": "Namespace", "link": ".html", "name": "", "doc": "Namespace "},
            {"type": "Interface",  "link": "PHPUnit_Framework_MockObject_Builder_Identity.html", "name": "PHPUnit_Framework_MockObject_Builder_Identity", "doc": "&quot;Builder interface for unique identifiers.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Builder_Identity", "fromLink": "PHPUnit_Framework_MockObject_Builder_Identity.html", "link": "PHPUnit_Framework_MockObject_Builder_Identity.html#method_id", "name": "PHPUnit_Framework_MockObject_Builder_Identity::id", "doc": "&quot;Sets the identification of the expectation to $id.&quot;"},
            
            {"type": "Interface",  "link": "PHPUnit_Framework_MockObject_Builder_Match.html", "name": "PHPUnit_Framework_MockObject_Builder_Match", "doc": "&quot;Builder interface for invocation order matches.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Builder_Match", "fromLink": "PHPUnit_Framework_MockObject_Builder_Match.html", "link": "PHPUnit_Framework_MockObject_Builder_Match.html#method_after", "name": "PHPUnit_Framework_MockObject_Builder_Match::after", "doc": "&quot;Defines the expectation which must occur before the current is valid.&quot;"},
            
            {"type": "Interface",  "link": "PHPUnit_Framework_MockObject_Builder_MethodNameMatch.html", "name": "PHPUnit_Framework_MockObject_Builder_MethodNameMatch", "doc": "&quot;Builder interface for matcher of method names.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Builder_MethodNameMatch", "fromLink": "PHPUnit_Framework_MockObject_Builder_MethodNameMatch.html", "link": "PHPUnit_Framework_MockObject_Builder_MethodNameMatch.html#method_method", "name": "PHPUnit_Framework_MockObject_Builder_MethodNameMatch::method", "doc": "&quot;Adds a new method name match and returns the parameter match object for\nfurther matching possibilities.&quot;"},
            
            {"type": "Interface",  "link": "PHPUnit_Framework_MockObject_Builder_Namespace.html", "name": "PHPUnit_Framework_MockObject_Builder_Namespace", "doc": "&quot;Interface for builders which can register builders with a given identification.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Builder_Namespace", "fromLink": "PHPUnit_Framework_MockObject_Builder_Namespace.html", "link": "PHPUnit_Framework_MockObject_Builder_Namespace.html#method_lookupId", "name": "PHPUnit_Framework_MockObject_Builder_Namespace::lookupId", "doc": "&quot;Looks up the match builder with identification $id and returns it.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Builder_Namespace", "fromLink": "PHPUnit_Framework_MockObject_Builder_Namespace.html", "link": "PHPUnit_Framework_MockObject_Builder_Namespace.html#method_registerId", "name": "PHPUnit_Framework_MockObject_Builder_Namespace::registerId", "doc": "&quot;Registers the match builder $builder with the identification $id. The\nbuilder can later be looked up using lookupId() to figure out if it\nhas been invoked.&quot;"},
            
            {"type": "Interface",  "link": "PHPUnit_Framework_MockObject_Builder_ParametersMatch.html", "name": "PHPUnit_Framework_MockObject_Builder_ParametersMatch", "doc": "&quot;Builder interface for parameter matchers.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Builder_ParametersMatch", "fromLink": "PHPUnit_Framework_MockObject_Builder_ParametersMatch.html", "link": "PHPUnit_Framework_MockObject_Builder_ParametersMatch.html#method_with", "name": "PHPUnit_Framework_MockObject_Builder_ParametersMatch::with", "doc": "&quot;Sets the parameters to match for, each parameter to this funtion will\nbe part of match. To perform specific matches or constraints create a\nnew PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint and use it for the parameter.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Builder_ParametersMatch", "fromLink": "PHPUnit_Framework_MockObject_Builder_ParametersMatch.html", "link": "PHPUnit_Framework_MockObject_Builder_ParametersMatch.html#method_withAnyParameters", "name": "PHPUnit_Framework_MockObject_Builder_ParametersMatch::withAnyParameters", "doc": "&quot;Sets a matcher which allows any kind of parameters.&quot;"},
            
            {"type": "Interface",  "link": "PHPUnit_Framework_MockObject_Builder_Stub.html", "name": "PHPUnit_Framework_MockObject_Builder_Stub", "doc": "&quot;Builder interface for stubs which are actions replacing an invocation.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Builder_Stub", "fromLink": "PHPUnit_Framework_MockObject_Builder_Stub.html", "link": "PHPUnit_Framework_MockObject_Builder_Stub.html#method_will", "name": "PHPUnit_Framework_MockObject_Builder_Stub::will", "doc": "&quot;Stubs the matching method with the stub object $stub. Any invocations of\nthe matched method will now be handled by the stub instead.&quot;"},
            
            {"type": "Interface",  "link": "PHPUnit_Framework_MockObject_Exception.html", "name": "PHPUnit_Framework_MockObject_Exception", "doc": "&quot;Interface for exceptions used by PHPUnit_MockObject.&quot;"},
                    
            {"type": "Interface",  "link": "PHPUnit_Framework_MockObject_Invocation.html", "name": "PHPUnit_Framework_MockObject_Invocation", "doc": "&quot;Interface for invocations.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Invocation", "fromLink": "PHPUnit_Framework_MockObject_Invocation.html", "link": "PHPUnit_Framework_MockObject_Invocation.html#method_generateReturnValue", "name": "PHPUnit_Framework_MockObject_Invocation::generateReturnValue", "doc": "&quot;&quot;"},
            
            {"type": "Interface",  "link": "PHPUnit_Framework_MockObject_Invokable.html", "name": "PHPUnit_Framework_MockObject_Invokable", "doc": "&quot;Interface for classes which can be invoked.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Invokable", "fromLink": "PHPUnit_Framework_MockObject_Invokable.html", "link": "PHPUnit_Framework_MockObject_Invokable.html#method_invoke", "name": "PHPUnit_Framework_MockObject_Invokable::invoke", "doc": "&quot;Invokes the invocation object $invocation so that it can be checked for\nexpectations or matched against stubs.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Invokable", "fromLink": "PHPUnit_Framework_MockObject_Invokable.html", "link": "PHPUnit_Framework_MockObject_Invokable.html#method_matches", "name": "PHPUnit_Framework_MockObject_Invokable::matches", "doc": "&quot;Checks if the invocation matches.&quot;"},
            
            {"type": "Interface",  "link": "PHPUnit_Framework_MockObject_Matcher_Invocation.html", "name": "PHPUnit_Framework_MockObject_Matcher_Invocation", "doc": "&quot;Interface for classes which matches an invocation based on its\nmethod name, argument, order or call count.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_Invocation", "fromLink": "PHPUnit_Framework_MockObject_Matcher_Invocation.html", "link": "PHPUnit_Framework_MockObject_Matcher_Invocation.html#method_invoked", "name": "PHPUnit_Framework_MockObject_Matcher_Invocation::invoked", "doc": "&quot;Registers the invocation $invocation in the object as being invoked.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_Invocation", "fromLink": "PHPUnit_Framework_MockObject_Matcher_Invocation.html", "link": "PHPUnit_Framework_MockObject_Matcher_Invocation.html#method_matches", "name": "PHPUnit_Framework_MockObject_Matcher_Invocation::matches", "doc": "&quot;Checks if the invocation $invocation matches the current rules. If it does\nthe matcher will get the invoked() method called which should check if an\nexpectation is met.&quot;"},
            
            {"type": "Interface",  "link": "PHPUnit_Framework_MockObject_MockObject.html", "name": "PHPUnit_Framework_MockObject_MockObject", "doc": "&quot;Interface for all mock objects which are generated by\nPHPUnit&lt;em&gt;Framework&lt;\/em&gt;MockObject_MockBuilder.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_MockObject", "fromLink": "PHPUnit_Framework_MockObject_MockObject.html", "link": "PHPUnit_Framework_MockObject_MockObject.html#method_expects", "name": "PHPUnit_Framework_MockObject_MockObject::expects", "doc": "&quot;Registers a new expectation in the mock object and returns the match\nobject which can be infused with further details.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_MockObject", "fromLink": "PHPUnit_Framework_MockObject_MockObject.html", "link": "PHPUnit_Framework_MockObject_MockObject.html#method___phpunit_setOriginalObject", "name": "PHPUnit_Framework_MockObject_MockObject::__phpunit_setOriginalObject", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_MockObject", "fromLink": "PHPUnit_Framework_MockObject_MockObject.html", "link": "PHPUnit_Framework_MockObject_MockObject.html#method___phpunit_getInvocationMocker", "name": "PHPUnit_Framework_MockObject_MockObject::__phpunit_getInvocationMocker", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_MockObject", "fromLink": "PHPUnit_Framework_MockObject_MockObject.html", "link": "PHPUnit_Framework_MockObject_MockObject.html#method___phpunit_verify", "name": "PHPUnit_Framework_MockObject_MockObject::__phpunit_verify", "doc": "&quot;Verifies that the current expectation is valid. If everything is OK the\ncode should just return, if not it must throw an exception.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_MockObject", "fromLink": "PHPUnit_Framework_MockObject_MockObject.html", "link": "PHPUnit_Framework_MockObject_MockObject.html#method___phpunit_hasMatchers", "name": "PHPUnit_Framework_MockObject_MockObject::__phpunit_hasMatchers", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_MockObject", "fromLink": "PHPUnit_Framework_MockObject_MockObject.html", "link": "PHPUnit_Framework_MockObject_MockObject.html#method_method", "name": "PHPUnit_Framework_MockObject_MockObject::method", "doc": "&quot;&quot;"},
            
            {"type": "Interface",  "link": "PHPUnit_Framework_MockObject_Stub.html", "name": "PHPUnit_Framework_MockObject_Stub", "doc": "&quot;An object that stubs the process of a normal method for a mock object.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Stub", "fromLink": "PHPUnit_Framework_MockObject_Stub.html", "link": "PHPUnit_Framework_MockObject_Stub.html#method_invoke", "name": "PHPUnit_Framework_MockObject_Stub::invoke", "doc": "&quot;Fakes the processing of the invocation $invocation by returning a\nspecific value.&quot;"},
            
            {"type": "Interface",  "link": "PHPUnit_Framework_MockObject_Stub_MatcherCollection.html", "name": "PHPUnit_Framework_MockObject_Stub_MatcherCollection", "doc": "&quot;Stubs a method by returning a user-defined value.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Stub_MatcherCollection", "fromLink": "PHPUnit_Framework_MockObject_Stub_MatcherCollection.html", "link": "PHPUnit_Framework_MockObject_Stub_MatcherCollection.html#method_addMatcher", "name": "PHPUnit_Framework_MockObject_Stub_MatcherCollection::addMatcher", "doc": "&quot;Adds a new matcher to the collection which can be used as an expectation\nor a stub.&quot;"},
            
            {"type": "Interface",  "link": "PHPUnit_Framework_MockObject_Verifiable.html", "name": "PHPUnit_Framework_MockObject_Verifiable", "doc": "&quot;Interface for classes which must verify a given expectation.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Verifiable", "fromLink": "PHPUnit_Framework_MockObject_Verifiable.html", "link": "PHPUnit_Framework_MockObject_Verifiable.html#method_verify", "name": "PHPUnit_Framework_MockObject_Verifiable::verify", "doc": "&quot;Verifies that the current expectation is valid. If everything is OK the\ncode should just return, if not it must throw an exception.&quot;"},
            
            
            {"type": "Class",  "link": "PHPUnit_Framework_MockObject_BadMethodCallException.html", "name": "PHPUnit_Framework_MockObject_BadMethodCallException", "doc": "&quot;&quot;"},
                    
            {"type": "Class",  "link": "PHPUnit_Framework_MockObject_Builder_Identity.html", "name": "PHPUnit_Framework_MockObject_Builder_Identity", "doc": "&quot;Builder interface for unique identifiers.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Builder_Identity", "fromLink": "PHPUnit_Framework_MockObject_Builder_Identity.html", "link": "PHPUnit_Framework_MockObject_Builder_Identity.html#method_id", "name": "PHPUnit_Framework_MockObject_Builder_Identity::id", "doc": "&quot;Sets the identification of the expectation to $id.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_MockObject_Builder_InvocationMocker.html", "name": "PHPUnit_Framework_MockObject_Builder_InvocationMocker", "doc": "&quot;Builder for mocked or stubbed invocations.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Builder_InvocationMocker", "fromLink": "PHPUnit_Framework_MockObject_Builder_InvocationMocker.html", "link": "PHPUnit_Framework_MockObject_Builder_InvocationMocker.html#method___construct", "name": "PHPUnit_Framework_MockObject_Builder_InvocationMocker::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Builder_InvocationMocker", "fromLink": "PHPUnit_Framework_MockObject_Builder_InvocationMocker.html", "link": "PHPUnit_Framework_MockObject_Builder_InvocationMocker.html#method_getMatcher", "name": "PHPUnit_Framework_MockObject_Builder_InvocationMocker::getMatcher", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Builder_InvocationMocker", "fromLink": "PHPUnit_Framework_MockObject_Builder_InvocationMocker.html", "link": "PHPUnit_Framework_MockObject_Builder_InvocationMocker.html#method_id", "name": "PHPUnit_Framework_MockObject_Builder_InvocationMocker::id", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Builder_InvocationMocker", "fromLink": "PHPUnit_Framework_MockObject_Builder_InvocationMocker.html", "link": "PHPUnit_Framework_MockObject_Builder_InvocationMocker.html#method_will", "name": "PHPUnit_Framework_MockObject_Builder_InvocationMocker::will", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Builder_InvocationMocker", "fromLink": "PHPUnit_Framework_MockObject_Builder_InvocationMocker.html", "link": "PHPUnit_Framework_MockObject_Builder_InvocationMocker.html#method_willReturn", "name": "PHPUnit_Framework_MockObject_Builder_InvocationMocker::willReturn", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Builder_InvocationMocker", "fromLink": "PHPUnit_Framework_MockObject_Builder_InvocationMocker.html", "link": "PHPUnit_Framework_MockObject_Builder_InvocationMocker.html#method_willReturnReference", "name": "PHPUnit_Framework_MockObject_Builder_InvocationMocker::willReturnReference", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Builder_InvocationMocker", "fromLink": "PHPUnit_Framework_MockObject_Builder_InvocationMocker.html", "link": "PHPUnit_Framework_MockObject_Builder_InvocationMocker.html#method_willReturnMap", "name": "PHPUnit_Framework_MockObject_Builder_InvocationMocker::willReturnMap", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Builder_InvocationMocker", "fromLink": "PHPUnit_Framework_MockObject_Builder_InvocationMocker.html", "link": "PHPUnit_Framework_MockObject_Builder_InvocationMocker.html#method_willReturnArgument", "name": "PHPUnit_Framework_MockObject_Builder_InvocationMocker::willReturnArgument", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Builder_InvocationMocker", "fromLink": "PHPUnit_Framework_MockObject_Builder_InvocationMocker.html", "link": "PHPUnit_Framework_MockObject_Builder_InvocationMocker.html#method_willReturnCallback", "name": "PHPUnit_Framework_MockObject_Builder_InvocationMocker::willReturnCallback", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Builder_InvocationMocker", "fromLink": "PHPUnit_Framework_MockObject_Builder_InvocationMocker.html", "link": "PHPUnit_Framework_MockObject_Builder_InvocationMocker.html#method_willReturnSelf", "name": "PHPUnit_Framework_MockObject_Builder_InvocationMocker::willReturnSelf", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Builder_InvocationMocker", "fromLink": "PHPUnit_Framework_MockObject_Builder_InvocationMocker.html", "link": "PHPUnit_Framework_MockObject_Builder_InvocationMocker.html#method_willReturnOnConsecutiveCalls", "name": "PHPUnit_Framework_MockObject_Builder_InvocationMocker::willReturnOnConsecutiveCalls", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Builder_InvocationMocker", "fromLink": "PHPUnit_Framework_MockObject_Builder_InvocationMocker.html", "link": "PHPUnit_Framework_MockObject_Builder_InvocationMocker.html#method_willThrowException", "name": "PHPUnit_Framework_MockObject_Builder_InvocationMocker::willThrowException", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Builder_InvocationMocker", "fromLink": "PHPUnit_Framework_MockObject_Builder_InvocationMocker.html", "link": "PHPUnit_Framework_MockObject_Builder_InvocationMocker.html#method_after", "name": "PHPUnit_Framework_MockObject_Builder_InvocationMocker::after", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Builder_InvocationMocker", "fromLink": "PHPUnit_Framework_MockObject_Builder_InvocationMocker.html", "link": "PHPUnit_Framework_MockObject_Builder_InvocationMocker.html#method_with", "name": "PHPUnit_Framework_MockObject_Builder_InvocationMocker::with", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Builder_InvocationMocker", "fromLink": "PHPUnit_Framework_MockObject_Builder_InvocationMocker.html", "link": "PHPUnit_Framework_MockObject_Builder_InvocationMocker.html#method_withConsecutive", "name": "PHPUnit_Framework_MockObject_Builder_InvocationMocker::withConsecutive", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Builder_InvocationMocker", "fromLink": "PHPUnit_Framework_MockObject_Builder_InvocationMocker.html", "link": "PHPUnit_Framework_MockObject_Builder_InvocationMocker.html#method_withAnyParameters", "name": "PHPUnit_Framework_MockObject_Builder_InvocationMocker::withAnyParameters", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Builder_InvocationMocker", "fromLink": "PHPUnit_Framework_MockObject_Builder_InvocationMocker.html", "link": "PHPUnit_Framework_MockObject_Builder_InvocationMocker.html#method_method", "name": "PHPUnit_Framework_MockObject_Builder_InvocationMocker::method", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_MockObject_Builder_Match.html", "name": "PHPUnit_Framework_MockObject_Builder_Match", "doc": "&quot;Builder interface for invocation order matches.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Builder_Match", "fromLink": "PHPUnit_Framework_MockObject_Builder_Match.html", "link": "PHPUnit_Framework_MockObject_Builder_Match.html#method_after", "name": "PHPUnit_Framework_MockObject_Builder_Match::after", "doc": "&quot;Defines the expectation which must occur before the current is valid.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_MockObject_Builder_MethodNameMatch.html", "name": "PHPUnit_Framework_MockObject_Builder_MethodNameMatch", "doc": "&quot;Builder interface for matcher of method names.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Builder_MethodNameMatch", "fromLink": "PHPUnit_Framework_MockObject_Builder_MethodNameMatch.html", "link": "PHPUnit_Framework_MockObject_Builder_MethodNameMatch.html#method_method", "name": "PHPUnit_Framework_MockObject_Builder_MethodNameMatch::method", "doc": "&quot;Adds a new method name match and returns the parameter match object for\nfurther matching possibilities.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_MockObject_Builder_Namespace.html", "name": "PHPUnit_Framework_MockObject_Builder_Namespace", "doc": "&quot;Interface for builders which can register builders with a given identification.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Builder_Namespace", "fromLink": "PHPUnit_Framework_MockObject_Builder_Namespace.html", "link": "PHPUnit_Framework_MockObject_Builder_Namespace.html#method_lookupId", "name": "PHPUnit_Framework_MockObject_Builder_Namespace::lookupId", "doc": "&quot;Looks up the match builder with identification $id and returns it.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Builder_Namespace", "fromLink": "PHPUnit_Framework_MockObject_Builder_Namespace.html", "link": "PHPUnit_Framework_MockObject_Builder_Namespace.html#method_registerId", "name": "PHPUnit_Framework_MockObject_Builder_Namespace::registerId", "doc": "&quot;Registers the match builder $builder with the identification $id. The\nbuilder can later be looked up using lookupId() to figure out if it\nhas been invoked.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_MockObject_Builder_ParametersMatch.html", "name": "PHPUnit_Framework_MockObject_Builder_ParametersMatch", "doc": "&quot;Builder interface for parameter matchers.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Builder_ParametersMatch", "fromLink": "PHPUnit_Framework_MockObject_Builder_ParametersMatch.html", "link": "PHPUnit_Framework_MockObject_Builder_ParametersMatch.html#method_with", "name": "PHPUnit_Framework_MockObject_Builder_ParametersMatch::with", "doc": "&quot;Sets the parameters to match for, each parameter to this funtion will\nbe part of match. To perform specific matches or constraints create a\nnew PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint and use it for the parameter.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Builder_ParametersMatch", "fromLink": "PHPUnit_Framework_MockObject_Builder_ParametersMatch.html", "link": "PHPUnit_Framework_MockObject_Builder_ParametersMatch.html#method_withAnyParameters", "name": "PHPUnit_Framework_MockObject_Builder_ParametersMatch::withAnyParameters", "doc": "&quot;Sets a matcher which allows any kind of parameters.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_MockObject_Builder_Stub.html", "name": "PHPUnit_Framework_MockObject_Builder_Stub", "doc": "&quot;Builder interface for stubs which are actions replacing an invocation.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Builder_Stub", "fromLink": "PHPUnit_Framework_MockObject_Builder_Stub.html", "link": "PHPUnit_Framework_MockObject_Builder_Stub.html#method_will", "name": "PHPUnit_Framework_MockObject_Builder_Stub::will", "doc": "&quot;Stubs the matching method with the stub object $stub. Any invocations of\nthe matched method will now be handled by the stub instead.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_MockObject_Exception.html", "name": "PHPUnit_Framework_MockObject_Exception", "doc": "&quot;Interface for exceptions used by PHPUnit_MockObject.&quot;"},
                    
            {"type": "Class",  "link": "PHPUnit_Framework_MockObject_Generator.html", "name": "PHPUnit_Framework_MockObject_Generator", "doc": "&quot;Mock Object Code Generator&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Generator", "fromLink": "PHPUnit_Framework_MockObject_Generator.html", "link": "PHPUnit_Framework_MockObject_Generator.html#method_getMock", "name": "PHPUnit_Framework_MockObject_Generator::getMock", "doc": "&quot;Returns a mock object for the specified class.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Generator", "fromLink": "PHPUnit_Framework_MockObject_Generator.html", "link": "PHPUnit_Framework_MockObject_Generator.html#method_getMockForAbstractClass", "name": "PHPUnit_Framework_MockObject_Generator::getMockForAbstractClass", "doc": "&quot;Returns a mock object for the specified abstract class with all abstract\nmethods of the class mocked. Concrete methods to mock can be specified with\nthe last parameter&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Generator", "fromLink": "PHPUnit_Framework_MockObject_Generator.html", "link": "PHPUnit_Framework_MockObject_Generator.html#method_getMockForTrait", "name": "PHPUnit_Framework_MockObject_Generator::getMockForTrait", "doc": "&quot;Returns a mock object for the specified trait with all abstract methods\nof the trait mocked. Concrete methods to mock can be specified with the\n&lt;code&gt;$mockedMethods&lt;\/code&gt; parameter.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Generator", "fromLink": "PHPUnit_Framework_MockObject_Generator.html", "link": "PHPUnit_Framework_MockObject_Generator.html#method_getObjectForTrait", "name": "PHPUnit_Framework_MockObject_Generator::getObjectForTrait", "doc": "&quot;Returns an object for the specified trait.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Generator", "fromLink": "PHPUnit_Framework_MockObject_Generator.html", "link": "PHPUnit_Framework_MockObject_Generator.html#method_generate", "name": "PHPUnit_Framework_MockObject_Generator::generate", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Generator", "fromLink": "PHPUnit_Framework_MockObject_Generator.html", "link": "PHPUnit_Framework_MockObject_Generator.html#method_generateClassFromWsdl", "name": "PHPUnit_Framework_MockObject_Generator::generateClassFromWsdl", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Generator", "fromLink": "PHPUnit_Framework_MockObject_Generator.html", "link": "PHPUnit_Framework_MockObject_Generator.html#method_getClassMethods", "name": "PHPUnit_Framework_MockObject_Generator::getClassMethods", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_MockObject_Invocation.html", "name": "PHPUnit_Framework_MockObject_Invocation", "doc": "&quot;Interface for invocations.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Invocation", "fromLink": "PHPUnit_Framework_MockObject_Invocation.html", "link": "PHPUnit_Framework_MockObject_Invocation.html#method_generateReturnValue", "name": "PHPUnit_Framework_MockObject_Invocation::generateReturnValue", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_MockObject_InvocationMocker.html", "name": "PHPUnit_Framework_MockObject_InvocationMocker", "doc": "&quot;Mocker for invocations which are sent from\nPHPUnit&lt;em&gt;Framework&lt;\/em&gt;MockObject_MockObject objects.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_InvocationMocker", "fromLink": "PHPUnit_Framework_MockObject_InvocationMocker.html", "link": "PHPUnit_Framework_MockObject_InvocationMocker.html#method___construct", "name": "PHPUnit_Framework_MockObject_InvocationMocker::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_InvocationMocker", "fromLink": "PHPUnit_Framework_MockObject_InvocationMocker.html", "link": "PHPUnit_Framework_MockObject_InvocationMocker.html#method_addMatcher", "name": "PHPUnit_Framework_MockObject_InvocationMocker::addMatcher", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_InvocationMocker", "fromLink": "PHPUnit_Framework_MockObject_InvocationMocker.html", "link": "PHPUnit_Framework_MockObject_InvocationMocker.html#method_hasMatchers", "name": "PHPUnit_Framework_MockObject_InvocationMocker::hasMatchers", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_InvocationMocker", "fromLink": "PHPUnit_Framework_MockObject_InvocationMocker.html", "link": "PHPUnit_Framework_MockObject_InvocationMocker.html#method_lookupId", "name": "PHPUnit_Framework_MockObject_InvocationMocker::lookupId", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_InvocationMocker", "fromLink": "PHPUnit_Framework_MockObject_InvocationMocker.html", "link": "PHPUnit_Framework_MockObject_InvocationMocker.html#method_registerId", "name": "PHPUnit_Framework_MockObject_InvocationMocker::registerId", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_InvocationMocker", "fromLink": "PHPUnit_Framework_MockObject_InvocationMocker.html", "link": "PHPUnit_Framework_MockObject_InvocationMocker.html#method_expects", "name": "PHPUnit_Framework_MockObject_InvocationMocker::expects", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_InvocationMocker", "fromLink": "PHPUnit_Framework_MockObject_InvocationMocker.html", "link": "PHPUnit_Framework_MockObject_InvocationMocker.html#method_invoke", "name": "PHPUnit_Framework_MockObject_InvocationMocker::invoke", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_InvocationMocker", "fromLink": "PHPUnit_Framework_MockObject_InvocationMocker.html", "link": "PHPUnit_Framework_MockObject_InvocationMocker.html#method_matches", "name": "PHPUnit_Framework_MockObject_InvocationMocker::matches", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_InvocationMocker", "fromLink": "PHPUnit_Framework_MockObject_InvocationMocker.html", "link": "PHPUnit_Framework_MockObject_InvocationMocker.html#method_verify", "name": "PHPUnit_Framework_MockObject_InvocationMocker::verify", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_MockObject_Invocation_Object.html", "name": "PHPUnit_Framework_MockObject_Invocation_Object", "doc": "&quot;Represents a non-static invocation.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Invocation_Object", "fromLink": "PHPUnit_Framework_MockObject_Invocation_Object.html", "link": "PHPUnit_Framework_MockObject_Invocation_Object.html#method___construct", "name": "PHPUnit_Framework_MockObject_Invocation_Object::__construct", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_MockObject_Invocation_Static.html", "name": "PHPUnit_Framework_MockObject_Invocation_Static", "doc": "&quot;Represents a static invocation.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Invocation_Static", "fromLink": "PHPUnit_Framework_MockObject_Invocation_Static.html", "link": "PHPUnit_Framework_MockObject_Invocation_Static.html#method___construct", "name": "PHPUnit_Framework_MockObject_Invocation_Static::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Invocation_Static", "fromLink": "PHPUnit_Framework_MockObject_Invocation_Static.html", "link": "PHPUnit_Framework_MockObject_Invocation_Static.html#method_toString", "name": "PHPUnit_Framework_MockObject_Invocation_Static::toString", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Invocation_Static", "fromLink": "PHPUnit_Framework_MockObject_Invocation_Static.html", "link": "PHPUnit_Framework_MockObject_Invocation_Static.html#method_generateReturnValue", "name": "PHPUnit_Framework_MockObject_Invocation_Static::generateReturnValue", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Invocation_Static", "fromLink": "PHPUnit_Framework_MockObject_Invocation_Static.html", "link": "PHPUnit_Framework_MockObject_Invocation_Static.html#method_cloneObject", "name": "PHPUnit_Framework_MockObject_Invocation_Static::cloneObject", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_MockObject_Invokable.html", "name": "PHPUnit_Framework_MockObject_Invokable", "doc": "&quot;Interface for classes which can be invoked.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Invokable", "fromLink": "PHPUnit_Framework_MockObject_Invokable.html", "link": "PHPUnit_Framework_MockObject_Invokable.html#method_invoke", "name": "PHPUnit_Framework_MockObject_Invokable::invoke", "doc": "&quot;Invokes the invocation object $invocation so that it can be checked for\nexpectations or matched against stubs.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Invokable", "fromLink": "PHPUnit_Framework_MockObject_Invokable.html", "link": "PHPUnit_Framework_MockObject_Invokable.html#method_matches", "name": "PHPUnit_Framework_MockObject_Invokable::matches", "doc": "&quot;Checks if the invocation matches.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_MockObject_Matcher.html", "name": "PHPUnit_Framework_MockObject_Matcher", "doc": "&quot;Main matcher which defines a full expectation using method, parameter and\ninvocation matchers.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher", "fromLink": "PHPUnit_Framework_MockObject_Matcher.html", "link": "PHPUnit_Framework_MockObject_Matcher.html#method___construct", "name": "PHPUnit_Framework_MockObject_Matcher::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher", "fromLink": "PHPUnit_Framework_MockObject_Matcher.html", "link": "PHPUnit_Framework_MockObject_Matcher.html#method_toString", "name": "PHPUnit_Framework_MockObject_Matcher::toString", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher", "fromLink": "PHPUnit_Framework_MockObject_Matcher.html", "link": "PHPUnit_Framework_MockObject_Matcher.html#method_invoked", "name": "PHPUnit_Framework_MockObject_Matcher::invoked", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher", "fromLink": "PHPUnit_Framework_MockObject_Matcher.html", "link": "PHPUnit_Framework_MockObject_Matcher.html#method_matches", "name": "PHPUnit_Framework_MockObject_Matcher::matches", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher", "fromLink": "PHPUnit_Framework_MockObject_Matcher.html", "link": "PHPUnit_Framework_MockObject_Matcher.html#method_verify", "name": "PHPUnit_Framework_MockObject_Matcher::verify", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher", "fromLink": "PHPUnit_Framework_MockObject_Matcher.html", "link": "PHPUnit_Framework_MockObject_Matcher.html#method_hasMatchers", "name": "PHPUnit_Framework_MockObject_Matcher::hasMatchers", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_MockObject_Matcher_AnyInvokedCount.html", "name": "PHPUnit_Framework_MockObject_Matcher_AnyInvokedCount", "doc": "&quot;Invocation matcher which checks if a method has been invoked zero or more\ntimes. This matcher will always match.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_AnyInvokedCount", "fromLink": "PHPUnit_Framework_MockObject_Matcher_AnyInvokedCount.html", "link": "PHPUnit_Framework_MockObject_Matcher_AnyInvokedCount.html#method_toString", "name": "PHPUnit_Framework_MockObject_Matcher_AnyInvokedCount::toString", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_AnyInvokedCount", "fromLink": "PHPUnit_Framework_MockObject_Matcher_AnyInvokedCount.html", "link": "PHPUnit_Framework_MockObject_Matcher_AnyInvokedCount.html#method_verify", "name": "PHPUnit_Framework_MockObject_Matcher_AnyInvokedCount::verify", "doc": "&quot;Verifies that the current expectation is valid. If everything is OK the\ncode should just return, if not it must throw an exception.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_MockObject_Matcher_AnyParameters.html", "name": "PHPUnit_Framework_MockObject_Matcher_AnyParameters", "doc": "&quot;Invocation matcher which allows any parameters to a method.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_AnyParameters", "fromLink": "PHPUnit_Framework_MockObject_Matcher_AnyParameters.html", "link": "PHPUnit_Framework_MockObject_Matcher_AnyParameters.html#method_toString", "name": "PHPUnit_Framework_MockObject_Matcher_AnyParameters::toString", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_AnyParameters", "fromLink": "PHPUnit_Framework_MockObject_Matcher_AnyParameters.html", "link": "PHPUnit_Framework_MockObject_Matcher_AnyParameters.html#method_matches", "name": "PHPUnit_Framework_MockObject_Matcher_AnyParameters::matches", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_MockObject_Matcher_ConsecutiveParameters.html", "name": "PHPUnit_Framework_MockObject_Matcher_ConsecutiveParameters", "doc": "&quot;Invocation matcher which looks for sets of specific parameters in the invocations.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_ConsecutiveParameters", "fromLink": "PHPUnit_Framework_MockObject_Matcher_ConsecutiveParameters.html", "link": "PHPUnit_Framework_MockObject_Matcher_ConsecutiveParameters.html#method___construct", "name": "PHPUnit_Framework_MockObject_Matcher_ConsecutiveParameters::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_ConsecutiveParameters", "fromLink": "PHPUnit_Framework_MockObject_Matcher_ConsecutiveParameters.html", "link": "PHPUnit_Framework_MockObject_Matcher_ConsecutiveParameters.html#method_toString", "name": "PHPUnit_Framework_MockObject_Matcher_ConsecutiveParameters::toString", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_ConsecutiveParameters", "fromLink": "PHPUnit_Framework_MockObject_Matcher_ConsecutiveParameters.html", "link": "PHPUnit_Framework_MockObject_Matcher_ConsecutiveParameters.html#method_matches", "name": "PHPUnit_Framework_MockObject_Matcher_ConsecutiveParameters::matches", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_ConsecutiveParameters", "fromLink": "PHPUnit_Framework_MockObject_Matcher_ConsecutiveParameters.html", "link": "PHPUnit_Framework_MockObject_Matcher_ConsecutiveParameters.html#method_verify", "name": "PHPUnit_Framework_MockObject_Matcher_ConsecutiveParameters::verify", "doc": "&quot;Checks if the invocation $invocation matches the current rules. If it does\nthe matcher will get the invoked() method called which should check if an\nexpectation is met.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_MockObject_Matcher_Invocation.html", "name": "PHPUnit_Framework_MockObject_Matcher_Invocation", "doc": "&quot;Interface for classes which matches an invocation based on its\nmethod name, argument, order or call count.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_Invocation", "fromLink": "PHPUnit_Framework_MockObject_Matcher_Invocation.html", "link": "PHPUnit_Framework_MockObject_Matcher_Invocation.html#method_invoked", "name": "PHPUnit_Framework_MockObject_Matcher_Invocation::invoked", "doc": "&quot;Registers the invocation $invocation in the object as being invoked.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_Invocation", "fromLink": "PHPUnit_Framework_MockObject_Matcher_Invocation.html", "link": "PHPUnit_Framework_MockObject_Matcher_Invocation.html#method_matches", "name": "PHPUnit_Framework_MockObject_Matcher_Invocation::matches", "doc": "&quot;Checks if the invocation $invocation matches the current rules. If it does\nthe matcher will get the invoked() method called which should check if an\nexpectation is met.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_MockObject_Matcher_InvokedAtIndex.html", "name": "PHPUnit_Framework_MockObject_Matcher_InvokedAtIndex", "doc": "&quot;Invocation matcher which checks if a method was invoked at a certain index.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_InvokedAtIndex", "fromLink": "PHPUnit_Framework_MockObject_Matcher_InvokedAtIndex.html", "link": "PHPUnit_Framework_MockObject_Matcher_InvokedAtIndex.html#method___construct", "name": "PHPUnit_Framework_MockObject_Matcher_InvokedAtIndex::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_InvokedAtIndex", "fromLink": "PHPUnit_Framework_MockObject_Matcher_InvokedAtIndex.html", "link": "PHPUnit_Framework_MockObject_Matcher_InvokedAtIndex.html#method_toString", "name": "PHPUnit_Framework_MockObject_Matcher_InvokedAtIndex::toString", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_InvokedAtIndex", "fromLink": "PHPUnit_Framework_MockObject_Matcher_InvokedAtIndex.html", "link": "PHPUnit_Framework_MockObject_Matcher_InvokedAtIndex.html#method_matches", "name": "PHPUnit_Framework_MockObject_Matcher_InvokedAtIndex::matches", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_InvokedAtIndex", "fromLink": "PHPUnit_Framework_MockObject_Matcher_InvokedAtIndex.html", "link": "PHPUnit_Framework_MockObject_Matcher_InvokedAtIndex.html#method_invoked", "name": "PHPUnit_Framework_MockObject_Matcher_InvokedAtIndex::invoked", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_InvokedAtIndex", "fromLink": "PHPUnit_Framework_MockObject_Matcher_InvokedAtIndex.html", "link": "PHPUnit_Framework_MockObject_Matcher_InvokedAtIndex.html#method_verify", "name": "PHPUnit_Framework_MockObject_Matcher_InvokedAtIndex::verify", "doc": "&quot;Verifies that the current expectation is valid. If everything is OK the\ncode should just return, if not it must throw an exception.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastCount.html", "name": "PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastCount", "doc": "&quot;Invocation matcher which checks if a method has been invoked at least\nN times.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastCount", "fromLink": "PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastCount.html", "link": "PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastCount.html#method___construct", "name": "PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastCount::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastCount", "fromLink": "PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastCount.html", "link": "PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastCount.html#method_toString", "name": "PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastCount::toString", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastCount", "fromLink": "PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastCount.html", "link": "PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastCount.html#method_verify", "name": "PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastCount::verify", "doc": "&quot;Verifies that the current expectation is valid. If everything is OK the\ncode should just return, if not it must throw an exception.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastOnce.html", "name": "PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastOnce", "doc": "&quot;Invocation matcher which checks if a method has been invoked at least one\ntime.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastOnce", "fromLink": "PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastOnce.html", "link": "PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastOnce.html#method_toString", "name": "PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastOnce::toString", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastOnce", "fromLink": "PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastOnce.html", "link": "PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastOnce.html#method_verify", "name": "PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastOnce::verify", "doc": "&quot;Verifies that the current expectation is valid. If everything is OK the\ncode should just return, if not it must throw an exception.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_MockObject_Matcher_InvokedAtMostCount.html", "name": "PHPUnit_Framework_MockObject_Matcher_InvokedAtMostCount", "doc": "&quot;Invocation matcher which checks if a method has been invoked at least\nN times.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_InvokedAtMostCount", "fromLink": "PHPUnit_Framework_MockObject_Matcher_InvokedAtMostCount.html", "link": "PHPUnit_Framework_MockObject_Matcher_InvokedAtMostCount.html#method___construct", "name": "PHPUnit_Framework_MockObject_Matcher_InvokedAtMostCount::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_InvokedAtMostCount", "fromLink": "PHPUnit_Framework_MockObject_Matcher_InvokedAtMostCount.html", "link": "PHPUnit_Framework_MockObject_Matcher_InvokedAtMostCount.html#method_toString", "name": "PHPUnit_Framework_MockObject_Matcher_InvokedAtMostCount::toString", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_InvokedAtMostCount", "fromLink": "PHPUnit_Framework_MockObject_Matcher_InvokedAtMostCount.html", "link": "PHPUnit_Framework_MockObject_Matcher_InvokedAtMostCount.html#method_verify", "name": "PHPUnit_Framework_MockObject_Matcher_InvokedAtMostCount::verify", "doc": "&quot;Verifies that the current expectation is valid. If everything is OK the\ncode should just return, if not it must throw an exception.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_MockObject_Matcher_InvokedCount.html", "name": "PHPUnit_Framework_MockObject_Matcher_InvokedCount", "doc": "&quot;Invocation matcher which checks if a method has been invoked a certain amount\nof times.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_InvokedCount", "fromLink": "PHPUnit_Framework_MockObject_Matcher_InvokedCount.html", "link": "PHPUnit_Framework_MockObject_Matcher_InvokedCount.html#method___construct", "name": "PHPUnit_Framework_MockObject_Matcher_InvokedCount::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_InvokedCount", "fromLink": "PHPUnit_Framework_MockObject_Matcher_InvokedCount.html", "link": "PHPUnit_Framework_MockObject_Matcher_InvokedCount.html#method_isNever", "name": "PHPUnit_Framework_MockObject_Matcher_InvokedCount::isNever", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_InvokedCount", "fromLink": "PHPUnit_Framework_MockObject_Matcher_InvokedCount.html", "link": "PHPUnit_Framework_MockObject_Matcher_InvokedCount.html#method_toString", "name": "PHPUnit_Framework_MockObject_Matcher_InvokedCount::toString", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_InvokedCount", "fromLink": "PHPUnit_Framework_MockObject_Matcher_InvokedCount.html", "link": "PHPUnit_Framework_MockObject_Matcher_InvokedCount.html#method_invoked", "name": "PHPUnit_Framework_MockObject_Matcher_InvokedCount::invoked", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_InvokedCount", "fromLink": "PHPUnit_Framework_MockObject_Matcher_InvokedCount.html", "link": "PHPUnit_Framework_MockObject_Matcher_InvokedCount.html#method_verify", "name": "PHPUnit_Framework_MockObject_Matcher_InvokedCount::verify", "doc": "&quot;Verifies that the current expectation is valid. If everything is OK the\ncode should just return, if not it must throw an exception.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_MockObject_Matcher_InvokedRecorder.html", "name": "PHPUnit_Framework_MockObject_Matcher_InvokedRecorder", "doc": "&quot;Records invocations and provides convenience methods for checking them later\non.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_InvokedRecorder", "fromLink": "PHPUnit_Framework_MockObject_Matcher_InvokedRecorder.html", "link": "PHPUnit_Framework_MockObject_Matcher_InvokedRecorder.html#method_getInvocationCount", "name": "PHPUnit_Framework_MockObject_Matcher_InvokedRecorder::getInvocationCount", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_InvokedRecorder", "fromLink": "PHPUnit_Framework_MockObject_Matcher_InvokedRecorder.html", "link": "PHPUnit_Framework_MockObject_Matcher_InvokedRecorder.html#method_getInvocations", "name": "PHPUnit_Framework_MockObject_Matcher_InvokedRecorder::getInvocations", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_InvokedRecorder", "fromLink": "PHPUnit_Framework_MockObject_Matcher_InvokedRecorder.html", "link": "PHPUnit_Framework_MockObject_Matcher_InvokedRecorder.html#method_hasBeenInvoked", "name": "PHPUnit_Framework_MockObject_Matcher_InvokedRecorder::hasBeenInvoked", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_InvokedRecorder", "fromLink": "PHPUnit_Framework_MockObject_Matcher_InvokedRecorder.html", "link": "PHPUnit_Framework_MockObject_Matcher_InvokedRecorder.html#method_invoked", "name": "PHPUnit_Framework_MockObject_Matcher_InvokedRecorder::invoked", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_InvokedRecorder", "fromLink": "PHPUnit_Framework_MockObject_Matcher_InvokedRecorder.html", "link": "PHPUnit_Framework_MockObject_Matcher_InvokedRecorder.html#method_matches", "name": "PHPUnit_Framework_MockObject_Matcher_InvokedRecorder::matches", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_MockObject_Matcher_MethodName.html", "name": "PHPUnit_Framework_MockObject_Matcher_MethodName", "doc": "&quot;Invocation matcher which looks for a specific method name in the invocations.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_MethodName", "fromLink": "PHPUnit_Framework_MockObject_Matcher_MethodName.html", "link": "PHPUnit_Framework_MockObject_Matcher_MethodName.html#method___construct", "name": "PHPUnit_Framework_MockObject_Matcher_MethodName::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_MethodName", "fromLink": "PHPUnit_Framework_MockObject_Matcher_MethodName.html", "link": "PHPUnit_Framework_MockObject_Matcher_MethodName.html#method_toString", "name": "PHPUnit_Framework_MockObject_Matcher_MethodName::toString", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_MethodName", "fromLink": "PHPUnit_Framework_MockObject_Matcher_MethodName.html", "link": "PHPUnit_Framework_MockObject_Matcher_MethodName.html#method_matches", "name": "PHPUnit_Framework_MockObject_Matcher_MethodName::matches", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_MockObject_Matcher_Parameters.html", "name": "PHPUnit_Framework_MockObject_Matcher_Parameters", "doc": "&quot;Invocation matcher which looks for specific parameters in the invocations.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_Parameters", "fromLink": "PHPUnit_Framework_MockObject_Matcher_Parameters.html", "link": "PHPUnit_Framework_MockObject_Matcher_Parameters.html#method___construct", "name": "PHPUnit_Framework_MockObject_Matcher_Parameters::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_Parameters", "fromLink": "PHPUnit_Framework_MockObject_Matcher_Parameters.html", "link": "PHPUnit_Framework_MockObject_Matcher_Parameters.html#method_toString", "name": "PHPUnit_Framework_MockObject_Matcher_Parameters::toString", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_Parameters", "fromLink": "PHPUnit_Framework_MockObject_Matcher_Parameters.html", "link": "PHPUnit_Framework_MockObject_Matcher_Parameters.html#method_matches", "name": "PHPUnit_Framework_MockObject_Matcher_Parameters::matches", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_Parameters", "fromLink": "PHPUnit_Framework_MockObject_Matcher_Parameters.html", "link": "PHPUnit_Framework_MockObject_Matcher_Parameters.html#method_verify", "name": "PHPUnit_Framework_MockObject_Matcher_Parameters::verify", "doc": "&quot;Checks if the invocation $invocation matches the current rules. If it\ndoes the matcher will get the invoked() method called which should check\nif an expectation is met.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_MockObject_Matcher_StatelessInvocation.html", "name": "PHPUnit_Framework_MockObject_Matcher_StatelessInvocation", "doc": "&quot;Invocation matcher which does not care about previous state from earlier\ninvocations.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_StatelessInvocation", "fromLink": "PHPUnit_Framework_MockObject_Matcher_StatelessInvocation.html", "link": "PHPUnit_Framework_MockObject_Matcher_StatelessInvocation.html#method_invoked", "name": "PHPUnit_Framework_MockObject_Matcher_StatelessInvocation::invoked", "doc": "&quot;Registers the invocation $invocation in the object as being invoked.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Matcher_StatelessInvocation", "fromLink": "PHPUnit_Framework_MockObject_Matcher_StatelessInvocation.html", "link": "PHPUnit_Framework_MockObject_Matcher_StatelessInvocation.html#method_verify", "name": "PHPUnit_Framework_MockObject_Matcher_StatelessInvocation::verify", "doc": "&quot;Checks if the invocation $invocation matches the current rules. If it does\nthe matcher will get the invoked() method called which should check if an\nexpectation is met.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_MockObject_MockBuilder.html", "name": "PHPUnit_Framework_MockObject_MockBuilder", "doc": "&quot;Implementation of the Builder pattern for Mock objects.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_MockBuilder", "fromLink": "PHPUnit_Framework_MockObject_MockBuilder.html", "link": "PHPUnit_Framework_MockObject_MockBuilder.html#method___construct", "name": "PHPUnit_Framework_MockObject_MockBuilder::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_MockBuilder", "fromLink": "PHPUnit_Framework_MockObject_MockBuilder.html", "link": "PHPUnit_Framework_MockObject_MockBuilder.html#method_getMock", "name": "PHPUnit_Framework_MockObject_MockBuilder::getMock", "doc": "&quot;Creates a mock object using a fluent interface.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_MockBuilder", "fromLink": "PHPUnit_Framework_MockObject_MockBuilder.html", "link": "PHPUnit_Framework_MockObject_MockBuilder.html#method_getMockForAbstractClass", "name": "PHPUnit_Framework_MockObject_MockBuilder::getMockForAbstractClass", "doc": "&quot;Creates a mock object for an abstract class using a fluent interface.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_MockBuilder", "fromLink": "PHPUnit_Framework_MockObject_MockBuilder.html", "link": "PHPUnit_Framework_MockObject_MockBuilder.html#method_getMockForTrait", "name": "PHPUnit_Framework_MockObject_MockBuilder::getMockForTrait", "doc": "&quot;Creates a mock object for a trait using a fluent interface.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_MockBuilder", "fromLink": "PHPUnit_Framework_MockObject_MockBuilder.html", "link": "PHPUnit_Framework_MockObject_MockBuilder.html#method_setMethods", "name": "PHPUnit_Framework_MockObject_MockBuilder::setMethods", "doc": "&quot;Specifies the subset of methods to mock. Default is to mock all of them.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_MockBuilder", "fromLink": "PHPUnit_Framework_MockObject_MockBuilder.html", "link": "PHPUnit_Framework_MockObject_MockBuilder.html#method_setMethodsExcept", "name": "PHPUnit_Framework_MockObject_MockBuilder::setMethodsExcept", "doc": "&quot;Specifies the subset of methods to not mock. Default is to mock all of them.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_MockBuilder", "fromLink": "PHPUnit_Framework_MockObject_MockBuilder.html", "link": "PHPUnit_Framework_MockObject_MockBuilder.html#method_setConstructorArgs", "name": "PHPUnit_Framework_MockObject_MockBuilder::setConstructorArgs", "doc": "&quot;Specifies the arguments for the constructor.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_MockBuilder", "fromLink": "PHPUnit_Framework_MockObject_MockBuilder.html", "link": "PHPUnit_Framework_MockObject_MockBuilder.html#method_setMockClassName", "name": "PHPUnit_Framework_MockObject_MockBuilder::setMockClassName", "doc": "&quot;Specifies the name for the mock class.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_MockBuilder", "fromLink": "PHPUnit_Framework_MockObject_MockBuilder.html", "link": "PHPUnit_Framework_MockObject_MockBuilder.html#method_disableOriginalConstructor", "name": "PHPUnit_Framework_MockObject_MockBuilder::disableOriginalConstructor", "doc": "&quot;Disables the invocation of the original constructor.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_MockBuilder", "fromLink": "PHPUnit_Framework_MockObject_MockBuilder.html", "link": "PHPUnit_Framework_MockObject_MockBuilder.html#method_enableOriginalConstructor", "name": "PHPUnit_Framework_MockObject_MockBuilder::enableOriginalConstructor", "doc": "&quot;Enables the invocation of the original constructor.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_MockBuilder", "fromLink": "PHPUnit_Framework_MockObject_MockBuilder.html", "link": "PHPUnit_Framework_MockObject_MockBuilder.html#method_disableOriginalClone", "name": "PHPUnit_Framework_MockObject_MockBuilder::disableOriginalClone", "doc": "&quot;Disables the invocation of the original clone constructor.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_MockBuilder", "fromLink": "PHPUnit_Framework_MockObject_MockBuilder.html", "link": "PHPUnit_Framework_MockObject_MockBuilder.html#method_enableOriginalClone", "name": "PHPUnit_Framework_MockObject_MockBuilder::enableOriginalClone", "doc": "&quot;Enables the invocation of the original clone constructor.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_MockBuilder", "fromLink": "PHPUnit_Framework_MockObject_MockBuilder.html", "link": "PHPUnit_Framework_MockObject_MockBuilder.html#method_disableAutoload", "name": "PHPUnit_Framework_MockObject_MockBuilder::disableAutoload", "doc": "&quot;Disables the use of class autoloading while creating the mock object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_MockBuilder", "fromLink": "PHPUnit_Framework_MockObject_MockBuilder.html", "link": "PHPUnit_Framework_MockObject_MockBuilder.html#method_enableAutoload", "name": "PHPUnit_Framework_MockObject_MockBuilder::enableAutoload", "doc": "&quot;Enables the use of class autoloading while creating the mock object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_MockBuilder", "fromLink": "PHPUnit_Framework_MockObject_MockBuilder.html", "link": "PHPUnit_Framework_MockObject_MockBuilder.html#method_disableArgumentCloning", "name": "PHPUnit_Framework_MockObject_MockBuilder::disableArgumentCloning", "doc": "&quot;Disables the cloning of arguments passed to mocked methods.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_MockBuilder", "fromLink": "PHPUnit_Framework_MockObject_MockBuilder.html", "link": "PHPUnit_Framework_MockObject_MockBuilder.html#method_enableArgumentCloning", "name": "PHPUnit_Framework_MockObject_MockBuilder::enableArgumentCloning", "doc": "&quot;Enables the cloning of arguments passed to mocked methods.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_MockBuilder", "fromLink": "PHPUnit_Framework_MockObject_MockBuilder.html", "link": "PHPUnit_Framework_MockObject_MockBuilder.html#method_enableProxyingToOriginalMethods", "name": "PHPUnit_Framework_MockObject_MockBuilder::enableProxyingToOriginalMethods", "doc": "&quot;Enables the invocation of the original methods.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_MockBuilder", "fromLink": "PHPUnit_Framework_MockObject_MockBuilder.html", "link": "PHPUnit_Framework_MockObject_MockBuilder.html#method_disableProxyingToOriginalMethods", "name": "PHPUnit_Framework_MockObject_MockBuilder::disableProxyingToOriginalMethods", "doc": "&quot;Disables the invocation of the original methods.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_MockBuilder", "fromLink": "PHPUnit_Framework_MockObject_MockBuilder.html", "link": "PHPUnit_Framework_MockObject_MockBuilder.html#method_setProxyTarget", "name": "PHPUnit_Framework_MockObject_MockBuilder::setProxyTarget", "doc": "&quot;Sets the proxy target.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_MockBuilder", "fromLink": "PHPUnit_Framework_MockObject_MockBuilder.html", "link": "PHPUnit_Framework_MockObject_MockBuilder.html#method_allowMockingUnknownTypes", "name": "PHPUnit_Framework_MockObject_MockBuilder::allowMockingUnknownTypes", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_MockBuilder", "fromLink": "PHPUnit_Framework_MockObject_MockBuilder.html", "link": "PHPUnit_Framework_MockObject_MockBuilder.html#method_disallowMockingUnknownTypes", "name": "PHPUnit_Framework_MockObject_MockBuilder::disallowMockingUnknownTypes", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_MockObject_MockObject.html", "name": "PHPUnit_Framework_MockObject_MockObject", "doc": "&quot;Interface for all mock objects which are generated by\nPHPUnit&lt;em&gt;Framework&lt;\/em&gt;MockObject_MockBuilder.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_MockObject", "fromLink": "PHPUnit_Framework_MockObject_MockObject.html", "link": "PHPUnit_Framework_MockObject_MockObject.html#method_expects", "name": "PHPUnit_Framework_MockObject_MockObject::expects", "doc": "&quot;Registers a new expectation in the mock object and returns the match\nobject which can be infused with further details.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_MockObject", "fromLink": "PHPUnit_Framework_MockObject_MockObject.html", "link": "PHPUnit_Framework_MockObject_MockObject.html#method___phpunit_setOriginalObject", "name": "PHPUnit_Framework_MockObject_MockObject::__phpunit_setOriginalObject", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_MockObject", "fromLink": "PHPUnit_Framework_MockObject_MockObject.html", "link": "PHPUnit_Framework_MockObject_MockObject.html#method___phpunit_getInvocationMocker", "name": "PHPUnit_Framework_MockObject_MockObject::__phpunit_getInvocationMocker", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_MockObject", "fromLink": "PHPUnit_Framework_MockObject_MockObject.html", "link": "PHPUnit_Framework_MockObject_MockObject.html#method___phpunit_verify", "name": "PHPUnit_Framework_MockObject_MockObject::__phpunit_verify", "doc": "&quot;Verifies that the current expectation is valid. If everything is OK the\ncode should just return, if not it must throw an exception.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_MockObject", "fromLink": "PHPUnit_Framework_MockObject_MockObject.html", "link": "PHPUnit_Framework_MockObject_MockObject.html#method___phpunit_hasMatchers", "name": "PHPUnit_Framework_MockObject_MockObject::__phpunit_hasMatchers", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_MockObject", "fromLink": "PHPUnit_Framework_MockObject_MockObject.html", "link": "PHPUnit_Framework_MockObject_MockObject.html#method_method", "name": "PHPUnit_Framework_MockObject_MockObject::method", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_MockObject_RuntimeException.html", "name": "PHPUnit_Framework_MockObject_RuntimeException", "doc": "&quot;&quot;"},
                    
            {"type": "Class",  "link": "PHPUnit_Framework_MockObject_Stub.html", "name": "PHPUnit_Framework_MockObject_Stub", "doc": "&quot;An object that stubs the process of a normal method for a mock object.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Stub", "fromLink": "PHPUnit_Framework_MockObject_Stub.html", "link": "PHPUnit_Framework_MockObject_Stub.html#method_invoke", "name": "PHPUnit_Framework_MockObject_Stub::invoke", "doc": "&quot;Fakes the processing of the invocation $invocation by returning a\nspecific value.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_MockObject_Stub_ConsecutiveCalls.html", "name": "PHPUnit_Framework_MockObject_Stub_ConsecutiveCalls", "doc": "&quot;Stubs a method by returning a user-defined stack of values.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Stub_ConsecutiveCalls", "fromLink": "PHPUnit_Framework_MockObject_Stub_ConsecutiveCalls.html", "link": "PHPUnit_Framework_MockObject_Stub_ConsecutiveCalls.html#method___construct", "name": "PHPUnit_Framework_MockObject_Stub_ConsecutiveCalls::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Stub_ConsecutiveCalls", "fromLink": "PHPUnit_Framework_MockObject_Stub_ConsecutiveCalls.html", "link": "PHPUnit_Framework_MockObject_Stub_ConsecutiveCalls.html#method_invoke", "name": "PHPUnit_Framework_MockObject_Stub_ConsecutiveCalls::invoke", "doc": "&quot;Fakes the processing of the invocation $invocation by returning a\nspecific value.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Stub_ConsecutiveCalls", "fromLink": "PHPUnit_Framework_MockObject_Stub_ConsecutiveCalls.html", "link": "PHPUnit_Framework_MockObject_Stub_ConsecutiveCalls.html#method_toString", "name": "PHPUnit_Framework_MockObject_Stub_ConsecutiveCalls::toString", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_MockObject_Stub_Exception.html", "name": "PHPUnit_Framework_MockObject_Stub_Exception", "doc": "&quot;Stubs a method by raising a user-defined exception.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Stub_Exception", "fromLink": "PHPUnit_Framework_MockObject_Stub_Exception.html", "link": "PHPUnit_Framework_MockObject_Stub_Exception.html#method___construct", "name": "PHPUnit_Framework_MockObject_Stub_Exception::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Stub_Exception", "fromLink": "PHPUnit_Framework_MockObject_Stub_Exception.html", "link": "PHPUnit_Framework_MockObject_Stub_Exception.html#method_invoke", "name": "PHPUnit_Framework_MockObject_Stub_Exception::invoke", "doc": "&quot;Fakes the processing of the invocation $invocation by returning a\nspecific value.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Stub_Exception", "fromLink": "PHPUnit_Framework_MockObject_Stub_Exception.html", "link": "PHPUnit_Framework_MockObject_Stub_Exception.html#method_toString", "name": "PHPUnit_Framework_MockObject_Stub_Exception::toString", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_MockObject_Stub_MatcherCollection.html", "name": "PHPUnit_Framework_MockObject_Stub_MatcherCollection", "doc": "&quot;Stubs a method by returning a user-defined value.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Stub_MatcherCollection", "fromLink": "PHPUnit_Framework_MockObject_Stub_MatcherCollection.html", "link": "PHPUnit_Framework_MockObject_Stub_MatcherCollection.html#method_addMatcher", "name": "PHPUnit_Framework_MockObject_Stub_MatcherCollection::addMatcher", "doc": "&quot;Adds a new matcher to the collection which can be used as an expectation\nor a stub.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_MockObject_Stub_Return.html", "name": "PHPUnit_Framework_MockObject_Stub_Return", "doc": "&quot;Stubs a method by returning a user-defined value.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Stub_Return", "fromLink": "PHPUnit_Framework_MockObject_Stub_Return.html", "link": "PHPUnit_Framework_MockObject_Stub_Return.html#method___construct", "name": "PHPUnit_Framework_MockObject_Stub_Return::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Stub_Return", "fromLink": "PHPUnit_Framework_MockObject_Stub_Return.html", "link": "PHPUnit_Framework_MockObject_Stub_Return.html#method_invoke", "name": "PHPUnit_Framework_MockObject_Stub_Return::invoke", "doc": "&quot;Fakes the processing of the invocation $invocation by returning a\nspecific value.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Stub_Return", "fromLink": "PHPUnit_Framework_MockObject_Stub_Return.html", "link": "PHPUnit_Framework_MockObject_Stub_Return.html#method_toString", "name": "PHPUnit_Framework_MockObject_Stub_Return::toString", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_MockObject_Stub_ReturnArgument.html", "name": "PHPUnit_Framework_MockObject_Stub_ReturnArgument", "doc": "&quot;Stubs a method by returning an argument that was passed to the mocked method.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Stub_ReturnArgument", "fromLink": "PHPUnit_Framework_MockObject_Stub_ReturnArgument.html", "link": "PHPUnit_Framework_MockObject_Stub_ReturnArgument.html#method___construct", "name": "PHPUnit_Framework_MockObject_Stub_ReturnArgument::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Stub_ReturnArgument", "fromLink": "PHPUnit_Framework_MockObject_Stub_ReturnArgument.html", "link": "PHPUnit_Framework_MockObject_Stub_ReturnArgument.html#method_invoke", "name": "PHPUnit_Framework_MockObject_Stub_ReturnArgument::invoke", "doc": "&quot;Fakes the processing of the invocation $invocation by returning a\nspecific value.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Stub_ReturnArgument", "fromLink": "PHPUnit_Framework_MockObject_Stub_ReturnArgument.html", "link": "PHPUnit_Framework_MockObject_Stub_ReturnArgument.html#method_toString", "name": "PHPUnit_Framework_MockObject_Stub_ReturnArgument::toString", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_MockObject_Stub_ReturnCallback.html", "name": "PHPUnit_Framework_MockObject_Stub_ReturnCallback", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Stub_ReturnCallback", "fromLink": "PHPUnit_Framework_MockObject_Stub_ReturnCallback.html", "link": "PHPUnit_Framework_MockObject_Stub_ReturnCallback.html#method___construct", "name": "PHPUnit_Framework_MockObject_Stub_ReturnCallback::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Stub_ReturnCallback", "fromLink": "PHPUnit_Framework_MockObject_Stub_ReturnCallback.html", "link": "PHPUnit_Framework_MockObject_Stub_ReturnCallback.html#method_invoke", "name": "PHPUnit_Framework_MockObject_Stub_ReturnCallback::invoke", "doc": "&quot;Fakes the processing of the invocation $invocation by returning a\nspecific value.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Stub_ReturnCallback", "fromLink": "PHPUnit_Framework_MockObject_Stub_ReturnCallback.html", "link": "PHPUnit_Framework_MockObject_Stub_ReturnCallback.html#method_toString", "name": "PHPUnit_Framework_MockObject_Stub_ReturnCallback::toString", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_MockObject_Stub_ReturnReference.html", "name": "PHPUnit_Framework_MockObject_Stub_ReturnReference", "doc": "&quot;Stubs a method by returning a user-defined reference to a value.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Stub_ReturnReference", "fromLink": "PHPUnit_Framework_MockObject_Stub_ReturnReference.html", "link": "PHPUnit_Framework_MockObject_Stub_ReturnReference.html#method___construct", "name": "PHPUnit_Framework_MockObject_Stub_ReturnReference::__construct", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_MockObject_Stub_ReturnSelf.html", "name": "PHPUnit_Framework_MockObject_Stub_ReturnSelf", "doc": "&quot;Stubs a method by returning the current object.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Stub_ReturnSelf", "fromLink": "PHPUnit_Framework_MockObject_Stub_ReturnSelf.html", "link": "PHPUnit_Framework_MockObject_Stub_ReturnSelf.html#method_invoke", "name": "PHPUnit_Framework_MockObject_Stub_ReturnSelf::invoke", "doc": "&quot;Fakes the processing of the invocation $invocation by returning a\nspecific value.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Stub_ReturnSelf", "fromLink": "PHPUnit_Framework_MockObject_Stub_ReturnSelf.html", "link": "PHPUnit_Framework_MockObject_Stub_ReturnSelf.html#method_toString", "name": "PHPUnit_Framework_MockObject_Stub_ReturnSelf::toString", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_MockObject_Stub_ReturnValueMap.html", "name": "PHPUnit_Framework_MockObject_Stub_ReturnValueMap", "doc": "&quot;Stubs a method by returning a value from a map.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Stub_ReturnValueMap", "fromLink": "PHPUnit_Framework_MockObject_Stub_ReturnValueMap.html", "link": "PHPUnit_Framework_MockObject_Stub_ReturnValueMap.html#method___construct", "name": "PHPUnit_Framework_MockObject_Stub_ReturnValueMap::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Stub_ReturnValueMap", "fromLink": "PHPUnit_Framework_MockObject_Stub_ReturnValueMap.html", "link": "PHPUnit_Framework_MockObject_Stub_ReturnValueMap.html#method_invoke", "name": "PHPUnit_Framework_MockObject_Stub_ReturnValueMap::invoke", "doc": "&quot;Fakes the processing of the invocation $invocation by returning a\nspecific value.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Stub_ReturnValueMap", "fromLink": "PHPUnit_Framework_MockObject_Stub_ReturnValueMap.html", "link": "PHPUnit_Framework_MockObject_Stub_ReturnValueMap.html#method_toString", "name": "PHPUnit_Framework_MockObject_Stub_ReturnValueMap::toString", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_MockObject_Verifiable.html", "name": "PHPUnit_Framework_MockObject_Verifiable", "doc": "&quot;Interface for classes which must verify a given expectation.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_MockObject_Verifiable", "fromLink": "PHPUnit_Framework_MockObject_Verifiable.html", "link": "PHPUnit_Framework_MockObject_Verifiable.html#method_verify", "name": "PHPUnit_Framework_MockObject_Verifiable::verify", "doc": "&quot;Verifies that the current expectation is valid. If everything is OK the\ncode should just return, if not it must throw an exception.&quot;"},
            
            
                                        // Fix trailing commas in the index
        {}
    ];

    /** Tokenizes strings by namespaces and functions */
    function tokenizer(term) {
        if (!term) {
            return [];
        }

        var tokens = [term];
        var meth = term.indexOf('::');

        // Split tokens into methods if "::" is found.
        if (meth > -1) {
            tokens.push(term.substr(meth + 2));
            term = term.substr(0, meth - 2);
        }

        // Split by namespace or fake namespace.
        if (term.indexOf('\\') > -1) {
            tokens = tokens.concat(term.split('\\'));
        } else if (term.indexOf('_') > 0) {
            tokens = tokens.concat(term.split('_'));
        }

        // Merge in splitting the string by case and return
        tokens = tokens.concat(term.match(/(([A-Z]?[^A-Z]*)|([a-z]?[^a-z]*))/g).slice(0,-1));

        return tokens;
    };

    root.Sami = {
        /**
         * Cleans the provided term. If no term is provided, then one is
         * grabbed from the query string "search" parameter.
         */
        cleanSearchTerm: function(term) {
            // Grab from the query string
            if (typeof term === 'undefined') {
                var name = 'search';
                var regex = new RegExp("[\\?&]" + name + "=([^&#]*)");
                var results = regex.exec(location.search);
                if (results === null) {
                    return null;
                }
                term = decodeURIComponent(results[1].replace(/\+/g, " "));
            }

            return term.replace(/<(?:.|\n)*?>/gm, '');
        },

        /** Searches through the index for a given term */
        search: function(term) {
            // Create a new search index if needed
            if (!bhIndex) {
                bhIndex = new Bloodhound({
                    limit: 500,
                    local: searchIndex,
                    datumTokenizer: function (d) {
                        return tokenizer(d.name);
                    },
                    queryTokenizer: Bloodhound.tokenizers.whitespace
                });
                bhIndex.initialize();
            }

            results = [];
            bhIndex.get(term, function(matches) {
                results = matches;
            });

            if (!rootPath) {
                return results;
            }

            // Fix the element links based on the current page depth.
            return $.map(results, function(ele) {
                if (ele.link.indexOf('..') > -1) {
                    return ele;
                }
                ele.link = rootPath + ele.link;
                if (ele.fromLink) {
                    ele.fromLink = rootPath + ele.fromLink;
                }
                return ele;
            });
        },

        /** Get a search class for a specific type */
        getSearchClass: function(type) {
            return searchTypeClasses[type] || searchTypeClasses['_'];
        },

        /** Add the left-nav tree to the site */
        injectApiTree: function(ele) {
            ele.html(treeHtml);
        }
    };

    $(function() {
        // Modify the HTML to work correctly based on the current depth
        rootPath = $('body').attr('data-root-path');
        treeHtml = treeHtml.replace(/href="/g, 'href="' + rootPath);
        Sami.injectApiTree($('#api-tree'));
    });

    return root.Sami;
})(window);

$(function() {

    // Enable the version switcher
    $('#version-switcher').change(function() {
        window.location = $(this).val()
    });

    
        // Toggle left-nav divs on click
        $('#api-tree .hd span').click(function() {
            $(this).parent().parent().toggleClass('opened');
        });

        // Expand the parent namespaces of the current page.
        var expected = $('body').attr('data-name');

        if (expected) {
            // Open the currently selected node and its parents.
            var container = $('#api-tree');
            var node = $('#api-tree li[data-name="' + expected + '"]');
            // Node might not be found when simulating namespaces
            if (node.length > 0) {
                node.addClass('active').addClass('opened');
                node.parents('li').addClass('opened');
                var scrollPos = node.offset().top - container.offset().top + container.scrollTop();
                // Position the item nearer to the top of the screen.
                scrollPos -= 200;
                container.scrollTop(scrollPos);
            }
        }

    
    
        var form = $('#search-form .typeahead');
        form.typeahead({
            hint: true,
            highlight: true,
            minLength: 1
        }, {
            name: 'search',
            displayKey: 'name',
            source: function (q, cb) {
                cb(Sami.search(q));
            }
        });

        // The selection is direct-linked when the user selects a suggestion.
        form.on('typeahead:selected', function(e, suggestion) {
            window.location = suggestion.link;
        });

        // The form is submitted when the user hits enter.
        form.keypress(function (e) {
            if (e.which == 13) {
                $('#search-form').submit();
                return true;
            }
        });

    
});


